apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: {{ .Values.name }}-pvc
spec:
  storageClassName: minikube-storage 
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.name }}-deployment
  namespace: default
  labels:
    app: {{ .Values.name }}
spec:
  selector:
    matchLabels:
      app: {{ .Values.name }}
  replicas: {{ .Values.replicas }}
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: {{ .Values.name }}
    spec:
      containers:
      - name: {{ .Values.name }}
        image: mongo:latest
        ports:
            - containerPort: {{ .Values.port }}
        resources:
          requests:
            cpu: 500m
            memory: 256Mi
          limits:
            cpu: 500m
            memory: 512Mi
        env:
        - name: MONGO_INITDB_ROOT_USERNAME
          valueFrom:
            secretKeyRef:
              name: mongodb-secret
              key: mongo-root-user
        - name: MONGO_INITDB_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mongodb-secret
              key: mongo-root-password
        volumeMounts:
          - name: secret-volume
            mountPath: /etc/secret-volume
            readOnly: true
          - name: data
            mountPath: /data/db
      volumes:
      - name: secret-volume
        secret:
          secretName: mongodb-secret
      - name: data
        persistentVolumeClaim:
          claimName: mongodb-pvc

        # livenessProbe:
        #   tcpSocket:
        #     port: 27017
        #   initialDelaySeconds: 30
        #   periodSeconds: 10
        # readinessProbe:
        #   tcpSocket:
        #     port: 27017
        #   initialDelaySeconds: 5
        #   periodSeconds: 10
        #
---
# https://kubernetes.io/docs/concepts/services-networking/service/
apiVersion: v1
kind: Service
metadata:
  name: {{ .Values.name }}-service
  namespace: default
spec:
  selector:
    app: {{ .Values.name }}
  ports:
  - name: {{ .Values.name }}-service
    protocol: TCP
    port: {{ .Values.port }}
    targetPort: {{ .Values.port }}
---

